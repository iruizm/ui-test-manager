{"ast":null,"code":"import { ref, inject, computed, watch } from 'vue';\nimport { store } from '../data/store.js';\nexport default {\n  __name: 'PatternTable',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const eventBus = inject('eventBus');\n    const searchText = ref('');\n    const tableData = computed(() => {\n      console.log(store.patterns);\n      return Object.values(store.patterns).map(pattern => ({\n        id: pattern.id,\n        name: pattern.name,\n        regex: pattern.regex,\n        replacement: pattern.replacement\n      }));\n    });\n    const itemsPerPage = ref(10);\n    const currentPage = ref(1);\n    const filteredData = computed(() => {\n      const lowerCaseSearch = searchText.value.toLowerCase();\n      return tableData.value.filter(pattern => pattern.name !== 'string' || pattern.name.toLowerCase().includes(lowerCaseSearch));\n    });\n    const paginatedData = computed(() => {\n      const startIndex = (currentPage.value - 1) * itemsPerPage.value;\n      const endIndex = startIndex + itemsPerPage.value;\n      return filteredData.value.slice(startIndex, endIndex);\n    });\n    const pageCount = computed(() => {\n      return Math.ceil(filteredData.value.length / itemsPerPage.value);\n    });\n    watch(searchText, () => {\n      currentPage.value = 1;\n    });\n    const selected = ref(null);\n    function showPattern(pattern) {\n      selected.value = pattern;\n    }\n    function changePage(page) {\n      currentPage.value = page;\n    }\n    async function addElement(event) {\n      const pattern = {};\n      eventBus.emit(\"save-pattern\", pattern);\n      event.target.value = '';\n    }\n    function saveElement() {\n      eventBus.emit(\"save-pattern\", selected.value);\n      selected.value = null;\n    }\n    function removeElement(id) {\n      eventBus.emit(\"delete-pattern\", id);\n    }\n    const __returned__ = {\n      eventBus,\n      searchText,\n      tableData,\n      itemsPerPage,\n      currentPage,\n      filteredData,\n      paginatedData,\n      pageCount,\n      selected,\n      showPattern,\n      changePage,\n      addElement,\n      saveElement,\n      removeElement,\n      ref,\n      inject,\n      computed,\n      watch,\n      get store() {\n        return store;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","inject","computed","watch","store","eventBus","searchText","tableData","console","log","patterns","Object","values","map","pattern","id","name","regex","replacement","itemsPerPage","currentPage","filteredData","lowerCaseSearch","value","toLowerCase","filter","includes","paginatedData","startIndex","endIndex","slice","pageCount","Math","ceil","length","selected","showPattern","changePage","page","addElement","event","emit","target","saveElement","removeElement"],"sources":["/home/irm/Dev/Go/ui-test-manager/ui-test/web/src/components/PatternTable.vue"],"sourcesContent":["<template>\n  <v-row>\n    <v-col cols=\"6\">\n      <v-card style=\"height: 100%\" class=\"fullscreen-card\">\n        <v-toolbar color=\"teal-darken-3\" density=\"comfortable\" floating>\n          <v-text-field v-model=\"searchText\" append-icon=\"mdi-magnify\" label=\"Search\" single-line\n            hide-details></v-text-field>\n          <v-spacer></v-spacer>\n          <v-tooltip text=\"Add\" location=\"top\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn v-bind=\"props\" variant=\"text\" icon=\"mdi-plus-box\" @click=\"addElement\"></v-btn>\n            </template>\n          </v-tooltip>\n        </v-toolbar>\n        <v-card>\n          <v-list elevation=\"4\" class=\"ma-2\" color=\"indigo-darken-3\" min-height=\"659px\" style=\"height: 100%\">\n            <v-list-item elevation=\"1\" v-for=\"pattern in paginatedData\" :key=\"pattern.id\" :style=\"{ height: '65px' }\"\n              variant=\"plain\">\n              <template v-slot:prepend>\n                {{ pattern.name }}\n              </template>\n              <template v-slot:append>\n                <v-btn-group>\n                  <v-tooltip text=\"Edit\" location=\"top\">\n                    <template v-slot:activator=\"{ props }\">\n                      <v-btn v-bind=\"props\" class=\"ma-1\" icon=\"mdi-file-edit\" @click=\"showPattern(pattern)\"> </v-btn>\n                    </template>\n                  </v-tooltip>\n                  <v-tooltip text=\"Remove\" location=\"top\">\n                    <template v-slot:activator=\"{ props }\">\n                      <v-btn v-bind=\"props\" @click=\"removeElement(pattern.id)\" class=\"ma-1\" icon=\"mdi-delete\"></v-btn>\n                    </template>\n                  </v-tooltip>\n                </v-btn-group>\n              </template>\n            </v-list-item>\n          </v-list>\n          <v-pagination small v-model=\"currentPage\" :length=\"pageCount\" @input=\"changePage\"></v-pagination>\n        </v-card>\n      </v-card>\n    </v-col>\n    <v-col v-if=\"selected != null\" cols=\"6\">\n      <v-card style=\"height: 100%\" class=\"fullscreen-card\">\n        <v-toolbar color=\"teal-darken-3\" density=\"comfortable\" floating>\n          <v-toolbar-title>Rule</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <!-- <v-switch v-model=\"selected.mode\" hide-details\n            :label=\"`Replace: ${selected.mode}`\"></v-switch> -->\n          <v-spacer></v-spacer>\n          <v-tooltip text=\"Save\" location=\"top\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn v-bind=\"props\" variant=\"text\" icon=\"mdi-content-save\" @click=\"saveElement()\"></v-btn>\n            </template>\n          </v-tooltip>\n\n        </v-toolbar>\n        <v-row>\n          <v-col cols=\"12\">\n            <v-text-field label=\"Name\" v-model=\"selected.name\"></v-text-field>\n\n          </v-col>\n          <v-col cols=\"12\">\n            <v-card-text>\n              <v-textarea label=\"Before\" class=\"full-screen-textarea\" rows=\"10\" v-model=\"selected.before\"></v-textarea>\n            </v-card-text>\n          </v-col>\n          <v-col cols=\"12\">\n            <v-card-text>\n              <v-textarea label=\"After\" class=\"full-screen-textarea\" rows=\"10\"\n                v-model=\"selected.after\"></v-textarea>\n            </v-card-text>\n          </v-col>\n        </v-row>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n\n<script setup>\nimport { ref, inject, computed, watch } from 'vue'\nimport { store } from '../data/store.js'\n\nconst eventBus = inject('eventBus')\nconst searchText = ref('');\n\nconst tableData = computed(() => {\n  console.log(store.patterns)\n  return Object.values(store.patterns).map(pattern => ({\n    id: pattern.id,\n    name: pattern.name,\n    regex: pattern.regex,\n    replacement: pattern.replacement,\n  }));\n});\n\nconst itemsPerPage = ref(10);\nconst currentPage = ref(1);\n\nconst filteredData = computed(() => {\n  const lowerCaseSearch = searchText.value.toLowerCase();\n  return tableData.value.filter(pattern =>\n    pattern.name !== 'string' || pattern.name.toLowerCase().includes(lowerCaseSearch)\n  );\n});\n\nconst paginatedData = computed(() => {\n  const startIndex = (currentPage.value - 1) * itemsPerPage.value;\n  const endIndex = startIndex + itemsPerPage.value;\n  return filteredData.value.slice(startIndex, endIndex);\n});\n\nconst pageCount = computed(() => {\n  return Math.ceil(filteredData.value.length / itemsPerPage.value);\n});\n\nwatch(searchText, () => {\n  currentPage.value = 1;\n});\n\nconst selected = ref(null)\nfunction showPattern(pattern) {\n  selected.value = pattern\n}\n\nfunction changePage(page) {\n  currentPage.value = page;\n}\n\nasync function addElement(event) {\n  const pattern = {};\n  eventBus.emit(\"save-pattern\", pattern);\n  event.target.value = ''\n}\n\nfunction saveElement() {\n  eventBus.emit(\"save-pattern\", selected.value)\n  selected.value = null\n}\n\nfunction removeElement(id) {\n  eventBus.emit(\"delete-pattern\", id)\n}\n</script>"],"mappings":"AAgFA,SAASA,GAAG,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,KAAK;AAClD,SAASC,KAAK,QAAQ,kBAAkB;;;;;;;IAExC,MAAMC,QAAQ,GAAGJ,MAAM,CAAC,UAAU,CAAC;IACnC,MAAMK,UAAU,GAAGN,GAAG,CAAC,EAAE,CAAC;IAE1B,MAAMO,SAAS,GAAGL,QAAQ,CAAC,MAAM;MAC/BM,OAAO,CAACC,GAAG,CAACL,KAAK,CAACM,QAAQ,CAAC;MAC3B,OAAOC,MAAM,CAACC,MAAM,CAACR,KAAK,CAACM,QAAQ,CAAC,CAACG,GAAG,CAACC,OAAO,KAAK;QACnDC,EAAE,EAAED,OAAO,CAACC,EAAE;QACdC,IAAI,EAAEF,OAAO,CAACE,IAAI;QAClBC,KAAK,EAAEH,OAAO,CAACG,KAAK;QACpBC,WAAW,EAAEJ,OAAO,CAACI;MACvB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGnB,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMoB,WAAW,GAAGpB,GAAG,CAAC,CAAC,CAAC;IAE1B,MAAMqB,YAAY,GAAGnB,QAAQ,CAAC,MAAM;MAClC,MAAMoB,eAAe,GAAGhB,UAAU,CAACiB,KAAK,CAACC,WAAW,CAAC,CAAC;MACtD,OAAOjB,SAAS,CAACgB,KAAK,CAACE,MAAM,CAACX,OAAO,IACnCA,OAAO,CAACE,IAAI,KAAK,QAAQ,IAAIF,OAAO,CAACE,IAAI,CAACQ,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACJ,eAAe,CAClF,CAAC;IACH,CAAC,CAAC;IAEF,MAAMK,aAAa,GAAGzB,QAAQ,CAAC,MAAM;MACnC,MAAM0B,UAAU,GAAG,CAACR,WAAW,CAACG,KAAK,GAAG,CAAC,IAAIJ,YAAY,CAACI,KAAK;MAC/D,MAAMM,QAAQ,GAAGD,UAAU,GAAGT,YAAY,CAACI,KAAK;MAChD,OAAOF,YAAY,CAACE,KAAK,CAACO,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IACvD,CAAC,CAAC;IAEF,MAAME,SAAS,GAAG7B,QAAQ,CAAC,MAAM;MAC/B,OAAO8B,IAAI,CAACC,IAAI,CAACZ,YAAY,CAACE,KAAK,CAACW,MAAM,GAAGf,YAAY,CAACI,KAAK,CAAC;IAClE,CAAC,CAAC;IAEFpB,KAAK,CAACG,UAAU,EAAE,MAAM;MACtBc,WAAW,CAACG,KAAK,GAAG,CAAC;IACvB,CAAC,CAAC;IAEF,MAAMY,QAAQ,GAAGnC,GAAG,CAAC,IAAI,CAAC;IAC1B,SAASoC,WAAWA,CAACtB,OAAO,EAAE;MAC5BqB,QAAQ,CAACZ,KAAK,GAAGT,OAAO;IAC1B;IAEA,SAASuB,UAAUA,CAACC,IAAI,EAAE;MACxBlB,WAAW,CAACG,KAAK,GAAGe,IAAI;IAC1B;IAEA,eAAeC,UAAUA,CAACC,KAAK,EAAE;MAC/B,MAAM1B,OAAO,GAAG,CAAC,CAAC;MAClBT,QAAQ,CAACoC,IAAI,CAAC,cAAc,EAAE3B,OAAO,CAAC;MACtC0B,KAAK,CAACE,MAAM,CAACnB,KAAK,GAAG,EAAE;IACzB;IAEA,SAASoB,WAAWA,CAAA,EAAG;MACrBtC,QAAQ,CAACoC,IAAI,CAAC,cAAc,EAAEN,QAAQ,CAACZ,KAAK,CAAC;MAC7CY,QAAQ,CAACZ,KAAK,GAAG,IAAI;IACvB;IAEA,SAASqB,aAAaA,CAAC7B,EAAE,EAAE;MACzBV,QAAQ,CAACoC,IAAI,CAAC,gBAAgB,EAAE1B,EAAE,CAAC;IACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}